@model VideoOnDemand.Web.Models.SerieViewModel

@{
    ViewBag.Title = "Nueva Serie";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaLanzamiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaLanzamiento, new { htmlAttributes = new { @class = "form-control", placeholder = "AAAA/MM/DD" } })
                @Html.ValidationMessageFor(model => model.fechaLanzamiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.estado.ToString() == "INVISIBLE")
                {
                    <input name="estado" type="radio" value="VISIBLE" /> @Html.Label("VISIBLE")
                    <input name="estado" type="radio" value="INVISIBLE" checked /> @Html.Label("INVISIBLE")
                }
                else if (Model.estado.ToString() == "VISIBLE")
                {
                    <input name="estado" type="radio" value="VISIBLE" checked /> @Html.Label("VISIBLE")
                    <input name="estado" type="radio" value="INVISIBLE" /> @Html.Label("INVISIBLE")
                }
                else
                {
                    <input name="estado" type="radio" value="VISIBLE" /> @Html.Label("VISIBLE")
                    <input name="estado" type="radio" value="INVISIBLE" /> @Html.Label("INVISIBLE")
                }



                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">G&eacute;neros</h3>
            </div>
            <div class="panel-body">
                @foreach (var item in Model.GenerosDisponibles)
                {
                    var seleccionado = "";

                    // Activar el checkbox si de los temas disponibles
                    // Existe en los temas seleccionados
                    if (Model.GenerosSeleccionados != null)
                    {
                        if (Model.GenerosSeleccionados.Contains(item.Id.Value))
                        {
                            seleccionado = "checked";
                        }
                    }

                    <div class="checkbox">
                        <label>
                            <input name="GenerosSeleccionados" type="checkbox" value="@item.Id.Value.ToString()" @seleccionado> @item.Nombre
                        </label>
                    </div>
                }
                @Html.ValidationMessageFor(model => model.GenerosSeleccionados, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Actores</h3>
            </div>
            <div class="panel-body">
                @foreach (var item in Model.PersonasDisponibles)
                {
                    var seleccionado = "";

                    // Activar el checkbox si de los temas disponibles
                    // Existe en los temas seleccionados
                    if (Model.PersonasSeleccionadas != null)
                    {
                        if (Model.PersonasSeleccionadas.Contains(item.Id.Value))
                        {
                            seleccionado = "checked";
                        }
                    }

                    <div class="checkbox">
                        <label>
                            <input name="PersonasSeleccionadas" type="checkbox" value="@item.Id.Value.ToString()" @seleccionado> @item.Nombre
                        </label>
                    </div>
                }
                @Html.ValidationMessageFor(model => model.PersonasSeleccionadas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnGuardar" type="submit" value="Registrar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar a la lista de series", "Index")
</div>

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {

            $("input[name='GenerosSeleccionados']").rules("add", { required: true, messages: { required: "Debe seleccionar un género." } });
            $("input[name='PersonasSeleccionadas']").rules("add", { required: true, messages: { required: "Debe seleccionar un actor." } });

            if(@ViewBag.Error == 1) {
                $("#txtTituloError").html("Error: Serie repetida");
                $("#txtError").html("<p>La serie que usted insertó se encuentra repetida, favor de modificar su año o nombre.</p>");
                $("#modalError").modal('show');
            }
        });
    </script>
}
