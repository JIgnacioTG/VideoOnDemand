@model VideoOnDemand.Web.Models.EpisodioViewModel

@{
    var serie = Model.Serie.nombre;
    ViewBag.Title = "Create";
    string Title = "Nuevo Episodio";
}

<h2>@Title</h2>

<h3>Serie: @serie</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.temporada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.temporada, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.temporada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numEpisodio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numEpisodio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numEpisodio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.duracionMin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.duracionMin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.duracionMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaLanzamiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaLanzamiento, new { htmlAttributes = new { @class = "form-control", placeholder = "AAAA/MM/DD" } })
                @Html.ValidationMessageFor(model => model.fechaLanzamiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Estado</h3>
            </div>
            <div class="panel-body">

                @if (Model.estado.Value.ToString().Equals("VISIBLE"))
                {
                    <div class="radio">
                        <label>
                            <input name="estado" type="radio" value="1" checked> Visible
                        </label>
                    </div>
                    <div class="radio">
                        <label>
                            <input name="estado" type="radio" value="2"> Invisible
                        </label>
                    </div>
                }
                else
                {
                    <div class="radio">
                        <label>
                            <input name="estado" type="radio" value="1"> Visible
                        </label>
                    </div>
                    <div class="radio">
                        <label>
                            <input name="estado" type="radio" value="2" checked> Invisible
                        </label>
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar a la lista de episodios", "Index", new { id = Model.serieId })
</div>
